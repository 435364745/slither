/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(1);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** multi main\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///multi_main?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _stats = __webpack_require__(2);\n\nvar _stats2 = _interopRequireDefault(_stats);\n\nvar _snake = __webpack_require__(4);\n\nvar _snake2 = _interopRequireDefault(_snake);\n\nvar _food = __webpack_require__(8);\n\nvar _food2 = _interopRequireDefault(_food);\n\nvar _frame = __webpack_require__(6);\n\nvar _frame2 = _interopRequireDefault(_frame);\n\nvar _map = __webpack_require__(7);\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n  window.setTimeout(callback, 1000 / 60);\n}; /**\n    * Created by wanghx on 4/23/16.\n    *\n    * main\n    *\n    */\n\nvar canvas = document.getElementById('cas');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\n// fps状态\nvar stats = new _stats2.default();\nstats.setMode(0);\nstats.domElement.style.position = 'absolute';\nstats.domElement.style.right = '0px';\nstats.domElement.style.top = '0px';\ndocument.body.appendChild(stats.domElement);\n\n// 初始化地图对象\n_map2.default.init({\n  canvas: canvas,\n  width: 5000,\n  height: 5000\n});\n\n// 初始化视窗对象\n_frame2.default.init({\n  x: 1000,\n  y: 1000,\n  width: canvas.width,\n  height: canvas.height\n});\n\n// 创建蛇类对象\nvar snake = new _snake2.default({\n  x: _frame2.default.x + _frame2.default.width / 2,\n  y: _frame2.default.y + _frame2.default.height / 2,\n  size: 40,\n  length: 10,\n  color: '#fff'\n});\n\n// 食物生成方法\nvar foodsNum = 100;\nvar foods = [];\nfunction createFood(num) {\n  for (var i = 0; i < num; i++) {\n    var point = ~ ~(Math.random() * 30 + 50);\n    var size = ~ ~(point / 3);\n\n    foods.push(new _food2.default({\n      x: ~ ~(Math.random() * (_map2.default.width + size) - 2 * size),\n      y: ~ ~(Math.random() * (_map2.default.height + size) - 2 * size),\n      size: size, point: point\n    }));\n  }\n}\n\n/**\n * 碰撞检测\n * @param dom\n * @param dom2\n * @param isRect   是否为矩形\n */\nfunction collision(dom, dom2, isRect) {\n  var disX = dom.x - dom2.x;\n  var disY = dom.y - dom2.y;\n\n  if (isRect) {\n    return Math.abs(disX) < dom.width + dom2.width && Math.abs(disY) < dom.height + dom2.height;\n  }\n\n  return Math.hypot(disX, disY) < (dom.width + dom2.width) / 2;\n}\n\n// 创建一些食物\ncreateFood(foodsNum);\n\n// 动画逻辑\nvar timeout = 0;\nvar time = new Date();\nfunction animate() {\n  var ntime = new Date();\n\n  if (ntime - time > timeout) {\n    _map2.default.clear();\n\n    // 让视窗跟随蛇的位置更改而更改\n    _frame2.default.track(snake);\n\n    _map2.default.render();\n\n    // 渲染食物, 以及检测食物与蛇头的碰撞\n    foods.slice(0).forEach(function (food) {\n      food.render();\n\n      if (food.visible && collision(snake.header, food)) {\n        foods.splice(foods.indexOf(food), 1);\n        snake.eat(food);\n        createFood(1);\n      }\n    });\n\n    snake.render();\n\n    _map2.default.renderSmallMap();\n\n    time = ntime;\n  }\n\n  stats.update();\n\n  raf(animate);\n}\n\nanimate();\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/main.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(module) {\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n// stats.js - http://github.com/mrdoob/stats.js\nvar Stats = function Stats() {\n  function f(a, e, b) {\n    a = document.createElement(a);a.id = e;a.style.cssText = b;return a;\n  }function l(a, e, b) {\n    var c = f(\"div\", a, \"padding:0 0 3px 3px;text-align:left;background:\" + b),\n        d = f(\"div\", a + \"Text\", \"font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:\" + e);d.innerHTML = a.toUpperCase();c.appendChild(d);a = f(\"div\", a + \"Graph\", \"width:74px;height:30px;background:\" + e);c.appendChild(a);for (e = 0; 74 > e; e++) {\n      a.appendChild(f(\"span\", \"\", \"width:1px;height:30px;float:left;opacity:0.9;background:\" + b));\n    }return c;\n  }function m(a) {\n    for (var b = c.children, d = 0; d < b.length; d++) {\n      b[d].style.display = d === a ? \"block\" : \"none\";\n    }n = a;\n  }function p(a, b) {\n    a.appendChild(a.firstChild).style.height = Math.min(30, 30 - 30 * b) + \"px\";\n  }var q = self.performance && self.performance.now ? self.performance.now.bind(performance) : Date.now,\n      k = q(),\n      r = k,\n      t = 0,\n      n = 0,\n      c = f(\"div\", \"stats\", \"width:80px;opacity:0.9;cursor:pointer\");c.addEventListener(\"mousedown\", function (a) {\n    a.preventDefault();m(++n % c.children.length);\n  }, !1);var d = 0,\n      u = Infinity,\n      v = 0,\n      b = l(\"fps\", \"#0ff\", \"#002\"),\n      A = b.children[0],\n      B = b.children[1];c.appendChild(b);var g = 0,\n      w = Infinity,\n      x = 0,\n      b = l(\"ms\", \"#0f0\", \"#020\"),\n      C = b.children[0],\n      D = b.children[1];c.appendChild(b);if (self.performance && self.performance.memory) {\n    var h = 0,\n        y = Infinity,\n        z = 0,\n        b = l(\"mb\", \"#f08\", \"#201\"),\n        E = b.children[0],\n        F = b.children[1];c.appendChild(b);\n  }m(n);return { REVISION: 14, domElement: c, setMode: m, begin: function begin() {\n      k = q();\n    }, end: function end() {\n      var a = q();g = a - k;w = Math.min(w, g);x = Math.max(x, g);C.textContent = (g | 0) + \" MS (\" + (w | 0) + \"-\" + (x | 0) + \")\";p(D, g / 200);t++;if (a > r + 1E3 && (d = Math.round(1E3 * t / (a - r)), u = Math.min(u, d), v = Math.max(v, d), A.textContent = d + \" FPS (\" + u + \"-\" + v + \")\", p(B, d / 100), r = a, t = 0, void 0 !== h)) {\n        var b = performance.memory.usedJSHeapSize,\n            c = performance.memory.jsHeapSizeLimit;h = Math.round(9.54E-7 * b);y = Math.min(y, h);z = Math.max(z, h);E.textContent = h + \" MB (\" + y + \"-\" + z + \")\";p(F, b / c);\n      }return a;\n    }, update: function update() {\n      k = this.end();\n    } };\n};\"object\" === ( false ? \"undefined\" : _typeof(module)) && (module.exports = Stats);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/third/stats.min.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/third/stats.min.js?");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base = __webpack_require__(5);\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _map = __webpack_require__(7);\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by wanghx on 4/23/16.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * snake\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar SPEED = 3;\nvar BASE_ANGLE = Math.PI * 200; // 用于保证蛇的角度一直都是正数\n\n// 蛇头和蛇身的基类\n\nvar SnakeBase = function (_Base) {\n  _inherits(SnakeBase, _Base);\n\n  function SnakeBase(options) {\n    _classCallCheck(this, SnakeBase);\n\n    // 皮肤颜色\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SnakeBase).call(this, options));\n\n    _this.color = options.color;\n    // 描边颜色\n    _this.color_2 = '#000';\n\n    // 垂直和水平速度\n    _this.vx = 0;\n    _this.vy = 0;\n\n    // 生成元素图片镜像\n    _this.createImage();\n    return _this;\n  }\n\n  // 设置基类的速度\n\n\n  _createClass(SnakeBase, [{\n    key: 'setSize',\n\n\n    /**\n     * 设置宽度和高度\n     * @param width\n     * @param height\n     */\n    value: function setSize(width, height) {\n      this.width = width;\n      this.height = height || width;\n      this.createImage();\n    }\n\n    /**\n     * 生成图片镜像\n     */\n\n  }, {\n    key: 'createImage',\n    value: function createImage() {\n      this.img = this.img || document.createElement('canvas');\n      this.img.width = this.width + 10;\n      this.img.height = this.height + 10;\n      this.imgctx = this.img.getContext('2d');\n\n      this.imgctx.lineWidth = 2;\n      this.imgctx.save();\n      this.imgctx.beginPath();\n      this.imgctx.arc(this.img.width / 2, this.img.height / 2, this.width / 2, 0, Math.PI * 2);\n      this.imgctx.fillStyle = this.color;\n      this.imgctx.strokeStyle = this.color_2;\n      this.imgctx.stroke();\n      this.imgctx.fill();\n      this.imgctx.restore();\n    }\n\n    /**\n     * 更新位置\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      this.x += this.vx;\n      this.y += this.vy;\n    }\n\n    /**\n     * 渲染镜像图片\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      this.update();\n\n      // 如果该元素在视窗内不可见, 则不进行绘制\n      if (!this.visible) return;\n\n      // 如果该对象有角度属性, 则使用translate来绘制, 因为要旋转\n      if (this.hasOwnProperty('angle')) {\n        _map2.default.ctx.save();\n        _map2.default.ctx.translate(this.paintX, this.paintY);\n        _map2.default.ctx.rotate(this.angle - BASE_ANGLE - Math.PI / 2);\n        _map2.default.ctx.drawImage(this.img, -this.img.width / 2, -this.img.height / 2);\n        _map2.default.ctx.restore();\n      } else {\n        _map2.default.ctx.drawImage(this.img, this.paintX - this.img.width / 2, this.paintY - this.img.height / 2);\n      }\n\n      // 绘制移动方向, debug用\n      //map.ctx.beginPath();\n      //map.ctx.moveTo(\n      //  this.paintX - (this.width * 0.5 * this.vx / this.speed),\n      //  this.paintY - (this.width * 0.5 * this.vy / this.speed)\n      //);\n      //map.ctx.lineTo(this.paintX, this.paintY);\n      //map.ctx.strokeStyle = '#000';\n      //map.ctx.stroke();\n    }\n  }, {\n    key: 'speed',\n    set: function set(val) {\n      this._speed = val;\n\n      // 重新计算水平垂直速度\n      this.velocity();\n    },\n    get: function get() {\n      return this._speed ? this._speed : this._speed = this.tracer ? this.tracer.speed : SPEED;\n    }\n  }]);\n\n  return SnakeBase;\n}(_base2.default);\n\n// 蛇的身躯类\n\n\nvar SnakeBody = function (_SnakeBase) {\n  _inherits(SnakeBody, _SnakeBase);\n\n  function SnakeBody(options) {\n    _classCallCheck(this, SnakeBody);\n\n    // 设置跟踪者\n\n    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(SnakeBody).call(this, options));\n\n    _this2.tracer = options.tracer;\n\n    var aim = _this2.getAim();\n    _this2.x = _this2.tox = aim.x;\n    _this2.y = _this2.toy = aim.y;\n\n    // 目标地址\n    _this2.tox = _this2.x;\n    _this2.toy = _this2.y;\n    return _this2;\n  }\n\n  _createClass(SnakeBody, [{\n    key: 'getAim',\n\n\n    // 计算蛇身的目标位置\n    value: function getAim() {\n      return {\n        x: this.tracer.x - this.distance * this.tracer.vx / this.tracer.speed,\n        y: this.tracer.y - this.distance * this.tracer.vy / this.tracer.speed\n      };\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      _get(Object.getPrototypeOf(SnakeBody.prototype), 'update', this).call(this);\n\n      var aim = this.getAim();\n\n      this.velocity(aim.x, aim.y);\n    }\n\n    /**\n     * 根据目标点, 计算速度\n     * @param x\n     * @param y\n     */\n\n  }, {\n    key: 'velocity',\n    value: function velocity(x, y) {\n      this.tox = x || this.tox;\n      this.toy = y || this.toy;\n\n      var disX = this.tox - this.x;\n      var disY = this.toy - this.y;\n      var dis = Math.hypot(disX, disY);\n\n      this.vx = this.speed * disX / dis || 0;\n      this.vy = this.speed * disY / dis || 0;\n    }\n  }, {\n    key: 'distance',\n    get: function get() {\n      return this.tracer.width * 0.2;\n    }\n  }]);\n\n  return SnakeBody;\n}(SnakeBase);\n\n// 蛇头类\n\n\nvar SnakeHeader = function (_SnakeBase2) {\n  _inherits(SnakeHeader, _SnakeBase2);\n\n  function SnakeHeader(options) {\n    _classCallCheck(this, SnakeHeader);\n\n    var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(SnakeHeader).call(this, options));\n\n    _this3.angle = BASE_ANGLE + Math.PI / 2;\n    _this3.toAngle = _this3.angle;\n    return _this3;\n  }\n\n  /**\n   * 添加画眼睛的功能\n   */\n\n\n  _createClass(SnakeHeader, [{\n    key: 'createImage',\n    value: function createImage() {\n      _get(Object.getPrototypeOf(SnakeHeader.prototype), 'createImage', this).call(this);\n      var self = this;\n      var eyeRadius = this.width * 0.2;\n\n      function drawEye(eyeX, eyeY) {\n        self.imgctx.beginPath();\n        self.imgctx.fillStyle = '#fff';\n        self.imgctx.strokeStyle = self.color_2;\n        self.imgctx.arc(eyeX, eyeY, eyeRadius, 0, Math.PI * 2);\n        self.imgctx.fill();\n        self.imgctx.stroke();\n\n        self.imgctx.beginPath();\n        self.imgctx.fillStyle = '#000';\n        self.imgctx.arc(eyeX + eyeRadius / 2, eyeY, 3, 0, Math.PI * 2);\n        self.imgctx.fill();\n      }\n\n      // 画左眼\n      drawEye(this.img.width / 2 + this.width / 2 - eyeRadius, this.img.height / 2 - this.height / 2 + eyeRadius);\n\n      // 画右眼\n      drawEye(this.img.width / 2 + this.width / 2 - eyeRadius, this.img.height / 2 + this.height / 2 - eyeRadius);\n    }\n\n    /**\n     * 转向某个角度\n     */\n\n  }, {\n    key: 'directTo',\n    value: function directTo(angle) {\n      // 老的目标角度, 但是是小于360度的, 因为每次计算出来的目标角度也是0 - 360度\n      var oldAngle = Math.abs(this.toAngle % (Math.PI * 2));\n\n      // 转了多少圈\n      var rounds = ~ ~(this.toAngle / (Math.PI * 2));\n\n      this.toAngle = angle;\n\n      if (oldAngle >= Math.PI * 3 / 2 && this.toAngle <= Math.PI / 2) {\n        // 角度从第四象限左划至第一象限, 增加圈数\n        rounds++;\n      } else if (oldAngle <= Math.PI / 2 && this.toAngle >= Math.PI * 3 / 2) {\n        // 角度从第一象限划至第四象限, 减少圈数\n        rounds--;\n      }\n\n      // 计算真实要转到的角度\n      this.toAngle += rounds * Math.PI * 2;\n    }\n\n    // 根据蛇头角度计算水平速度和垂直速度\n\n  }, {\n    key: 'velocity',\n    value: function velocity() {\n      var angle = this.angle % (Math.PI * 2);\n      var vx = Math.abs(this.speed * Math.sin(angle));\n      var vy = Math.abs(this.speed * Math.cos(angle));\n\n      if (angle < Math.PI / 2) {\n        this.vx = vx;\n        this.vy = -vy;\n      } else if (angle < Math.PI) {\n        this.vx = vx;\n        this.vy = vy;\n      } else if (angle < Math.PI * 3 / 2) {\n        this.vx = -vx;\n        this.vy = vy;\n      } else {\n        this.vx = -vx;\n        this.vy = -vy;\n      }\n    }\n\n    /**\n     * 增加蛇头的逐帧逻辑\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      this.turnAround();\n\n      this.velocity();\n\n      _get(Object.getPrototypeOf(SnakeHeader.prototype), 'update', this).call(this);\n\n      // 不让蛇走出边界\n      var whalf = this.width / 2;\n      if (this.x < whalf) {\n        this.x = whalf;\n      } else if (this.x + whalf > _map2.default.width) {\n        this.x = _map2.default.width - whalf;\n      }\n\n      var hhalf = this.height / 2;\n      if (this.y < hhalf) {\n        this.y = hhalf;\n      } else if (this.y + hhalf > _map2.default.height) {\n        this.y = _map2.default.height - hhalf;\n      }\n    }\n\n    /**\n     * 蛇头转头\n     */\n\n  }, {\n    key: 'turnAround',\n    value: function turnAround() {\n      var angleDistance = this.toAngle - this.angle; // 与目标角度之间的角度差\n      var turnSpeed = 0.045; // 转头速度\n\n      // 当转到目标角度, 重置蛇头角度\n      if (Math.abs(angleDistance) <= turnSpeed) {\n        this.toAngle = this.angle = BASE_ANGLE + this.toAngle % (Math.PI * 2);\n      } else {\n        this.angle += Math.sign(angleDistance) * turnSpeed;\n      }\n    }\n  }]);\n\n  return SnakeHeader;\n}(SnakeBase);\n\n// 蛇类\n\n\nvar Snake = function () {\n  function Snake(options) {\n    _classCallCheck(this, Snake);\n\n    this.bodys = [];\n    this.point = 0;\n\n    // 创建脑袋\n    this.header = new SnakeHeader(options);\n\n    // 创建身躯, 给予各个身躯跟踪目标\n    options.tracer = this.header;\n    for (var i = 0; i < options.length; i++) {\n      this.bodys.push(options.tracer = new SnakeBody(options));\n    }\n\n    this.binding();\n  }\n\n  _createClass(Snake, [{\n    key: 'binding',\n\n\n    /**\n     * 蛇与鼠标的交互事件\n     */\n    value: function binding() {\n      var header = this.header;\n      var bodys = this.bodys;\n\n      // 蛇头跟随鼠标的移动而变更移动方向\n      window.addEventListener('mousemove', function () {\n        var e = arguments.length <= 0 || arguments[0] === undefined ? window.event : arguments[0];\n\n        var x = e.clientX - header.paintX;\n        var y = header.paintY - e.clientY;\n        var angle = Math.atan(Math.abs(x / y));\n\n        // 计算角度, 角度值为 0-360\n        if (x > 0 && y < 0) {\n          angle = Math.PI - angle;\n        } else if (x < 0 && y < 0) {\n          angle = Math.PI + angle;\n        } else if (x < 0 && y > 0) {\n          angle = Math.PI * 2 - angle;\n        }\n\n        header.directTo(angle);\n      });\n\n      // 鼠标按下让蛇加速\n      window.addEventListener('mousedown', function () {\n        header.speed = 5;\n        bodys.forEach(function (body) {\n          body.speed = 5;\n        });\n      });\n\n      // 鼠标抬起停止加速\n      window.addEventListener('mouseup', function () {\n        header.speed = SPEED;\n        bodys.forEach(function (body) {\n          body.speed = SPEED;\n        });\n      });\n    }\n\n    /**\n     * 吃掉食物\n     * @param food\n     */\n\n  }, {\n    key: 'eat',\n    value: function eat(food) {\n      this.point += food.point;\n\n      // 增加分数引起虫子体积增大\n      var newSize = this.header.width + food.point / 50;\n      this.header.setSize(newSize);\n      this.bodys.forEach(function (body) {\n        body.setSize(newSize);\n      });\n\n      // 同时每吃一个食物, 都增加身躯\n      var lastBody = this.bodys[this.bodys.length - 1];\n      this.bodys.push(new SnakeBody({\n        x: lastBody.x,\n        y: lastBody.y,\n        size: lastBody.width,\n        color: lastBody.color,\n        tracer: lastBody\n      }));\n    }\n\n    // 渲染蛇头蛇身\n\n  }, {\n    key: 'render',\n    value: function render() {\n      for (var i = this.bodys.length - 1; i >= 0; i--) {\n        this.bodys[i].render();\n      }\n\n      this.header.render();\n    }\n  }, {\n    key: 'x',\n    get: function get() {\n      return this.header.x;\n    }\n  }, {\n    key: 'y',\n    get: function get() {\n      return this.header.y;\n    }\n  }]);\n\n  return Snake;\n}();\n\nexports.default = Snake;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/snake.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/lib/snake.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nreated by wanghx on 4/27/16.\nnbase    地图上的元素基础类, 默认为圆\nn基础属性:\nx       元素的中心点x坐标\ny       元素的中心店y坐标\nwidth   元素宽度\nheight  元素高度\npaintX  元素的绘制坐标,\npaintY  元素的绘制坐标\nvisible 元素是否在视窗内可见\nnn\nvar _frame = __webpack_require__(6);\n\nvar _frame2 = _interopRequireDefault(_frame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Base = function () {\n  function Base(options) {\n    _classCallCheck(this, Base);\n\n    this.x = options.x;\n    this.y = options.y;\n    this.width = options.size || options.width;\n    this.height = options.size || options.height;\n  }\n\n  /**\n   * 绘制时的x坐标, 要根据视窗来计算位置\n   * @returns {number}\n   */\n\n\n  _createClass(Base, [{\n    key: 'paintX',\n    get: function get() {\n      return this.x - _frame2.default.x;\n    }\n\n    /**\n     * 绘制时的y坐标, 要根据视窗来计算位置\n     * @returns {number}\n     */\n\n  }, {\n    key: 'paintY',\n    get: function get() {\n      return this.y - _frame2.default.y;\n    }\n\n    /**\n     * 在视窗内是否可见\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'visible',\n    get: function get() {\n      var paintX = this.paintX;\n      var paintY = this.paintY;\n      var halfWidth = this.width / 2;\n      var halfHeight = this.height / 2;\n\n      return paintX + halfWidth > 0 && paintX - halfWidth < _frame2.default.width && paintY + halfHeight > 0 && paintY - halfHeight < _frame2.default.height;\n    }\n  }]);\n\n  return Base;\n}();\n\nexports.default = Base;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/base.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/lib/base.js?");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Created by wanghx on 4/27/16.\n *\n * 视窗类 由于视窗在整个游戏中只有一个, 所以做成单例\n *\n */\n\n// 视窗类\n\nvar Frame = function () {\n  function Frame() {\n    _classCallCheck(this, Frame);\n  }\n\n  _createClass(Frame, [{\n    key: \"init\",\n    value: function init(options) {\n      this.x = options.x;\n      this.y = options.y;\n      this.width = options.width;\n      this.height = options.height;\n    }\n\n    /**\n     * 跟踪某个对象\n     */\n\n  }, {\n    key: \"track\",\n    value: function track(obj) {\n      this.translate(obj.x - this.x - this.width / 2, obj.y - this.y - this.height / 2);\n    }\n\n    /**\n     * 移动视窗\n     * @param x\n     * @param y\n     */\n\n  }, {\n    key: \"translate\",\n    value: function translate(x, y) {\n      this.x += x;\n      this.y += y;\n    }\n  }]);\n\n  return Frame;\n}();\n\nexports.default = new Frame();\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/frame.js\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/lib/frame.js?");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\nreated by wanghx on 4/25/16.\nn地图类 由于地图在整个游戏中只有一个, 所以做成单例\nnn\nvar _frame = __webpack_require__(6);\n\nvar _frame2 = _interopRequireDefault(_frame);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// 地图类\n\nvar Map = function () {\n  function Map() {\n    _classCallCheck(this, Map);\n\n    // 背景块的大小\n    this.block_w = 150;\n    this.block_h = 150;\n  }\n\n  /**\n   * 初始化map对象\n   * @param options\n   */\n\n\n  _createClass(Map, [{\n    key: 'init',\n    value: function init(options) {\n      this.canvas = options.canvas;\n      this.ctx = this.canvas.getContext('2d');\n\n      // 地图大小\n      this.width = options.width;\n      this.height = options.height;\n    }\n\n    /**\n     * 清空地图上的内容\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.ctx.clearRect(0, 0, _frame2.default.width, _frame2.default.height);\n    }\n\n    /**\n     * 渲染地图\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var beginX = _frame2.default.x < 0 ? -_frame2.default.x : -_frame2.default.x % this.block_w;\n      var beginY = _frame2.default.y < 0 ? -_frame2.default.y : -_frame2.default.y % this.block_h;\n      var endX = _frame2.default.x + _frame2.default.width > this.width ? this.width - _frame2.default.x : beginX + _frame2.default.width + this.block_w;\n      var endY = _frame2.default.y + _frame2.default.height > this.height ? this.height - _frame2.default.y : beginY + _frame2.default.height + this.block_h;\n\n      // 铺底色\n      this.ctx.fillStyle = '#999';\n      this.ctx.fillRect(beginX, beginY, endX - beginX, endY - beginY);\n\n      // 画方格砖\n      this.ctx.strokeStyle = '#fff';\n      for (var x = beginX; x <= endX; x += this.block_w) {\n        for (var y = beginY; y <= endY; y += this.block_w) {\n          var cx = endX - x;\n          var cy = endY - y;\n          var w = cx < this.block_w ? cx : this.block_w;\n          var h = cy < this.block_h ? cy : this.block_h;\n\n          this.ctx.strokeRect(x, y, w, h);\n        }\n      }\n    }\n\n    /**\n     * 画小地图\n     */\n\n  }, {\n    key: 'renderSmallMap',\n    value: function renderSmallMap() {\n      // 小地图外壳, 圆圈\n      var margin = 30;\n      var smapr = 50;\n      var smapx = _frame2.default.width - smapr - margin;\n      var smapy = _frame2.default.height - smapr - margin;\n\n      // 地图在小地图中的位置和大小\n      var smrect = 50;\n      var smrectw = this.width > this.height ? smrect : this.width * smrect / this.height;\n      var smrecth = this.width > this.height ? this.height * smrect / this.width : smrect;\n      var smrectx = smapx - smrectw / 2;\n      var smrecty = smapy - smrecth / 2;\n\n      // 相对比例\n      var radio = smrectw / this.width;\n\n      // 视窗在小地图中的位置和大小\n      var smframex = _frame2.default.x * radio + smrectx;\n      var smframey = _frame2.default.y * radio + smrecty;\n      var smframew = _frame2.default.width * radio;\n      var smframeh = _frame2.default.height * radio;\n\n      this.ctx.save();\n      this.ctx.globalAlpha = 0.8;\n\n      // 画个圈先\n      this.ctx.beginPath();\n      this.ctx.arc(smapx, smapy, smapr, 0, Math.PI * 2);\n      this.ctx.fillStyle = '#000';\n      this.ctx.fill();\n      this.ctx.stroke();\n\n      // 画缩小版地图\n      this.ctx.fillStyle = '#999';\n      this.ctx.fillRect(smrectx, smrecty, smrectw, smrecth);\n\n      // 画视窗\n      this.ctx.strokeRect(smframex, smframey, smframew, smframeh);\n\n      // 画蛇蛇位置\n      this.ctx.fillStyle = '#f00';\n      this.ctx.fillRect(smframex + smframew / 2 - 1, smframey + smframeh / 2 - 1, 2, 2);\n\n      this.ctx.restore();\n    }\n  }]);\n\n  return Map;\n}();\n\nexports.default = new Map();\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/map.js\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/lib/map.js?");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _base = __webpack_require__(5);\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _map = __webpack_require__(7);\n\nvar _map2 = _interopRequireDefault(_map);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by wanghx on 4/27/16.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * food\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar Food = function (_Base) {\n  _inherits(Food, _Base);\n\n  function Food(options) {\n    _classCallCheck(this, Food);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Food).call(this, options));\n\n    _this.point = options.point;\n    _this.r = _this.width / 2; // 食物的半径, 发光半径\n    _this.cr = _this.width / 2; // 食物实体半径\n    _this.lightDirection = true; // 发光动画方向\n    return _this;\n  }\n\n  _createClass(Food, [{\n    key: 'update',\n    value: function update() {\n      var lightSpeed = 1;\n\n      this.r += this.lightDirection ? lightSpeed : -lightSpeed;\n\n      // 当发光圈到达一定值再缩小\n      if (this.r > this.cr * 2 || this.r < this.cr) {\n        this.lightDirection = !this.lightDirection;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      this.update();\n\n      if (!this.visible) {\n        return;\n      }\n\n      _map2.default.ctx.fillStyle = '#fff';\n\n      // 绘制光圈\n      _map2.default.ctx.globalAlpha = 0.2;\n      _map2.default.ctx.beginPath();\n      _map2.default.ctx.arc(this.paintX, this.paintY, this.r, 0, Math.PI * 2);\n      _map2.default.ctx.fill();\n\n      // 绘制实体\n      _map2.default.ctx.globalAlpha = 1;\n      _map2.default.ctx.beginPath();\n      _map2.default.ctx.arc(this.paintX, this.paintY, this.cr, 0, Math.PI * 2);\n      _map2.default.ctx.fill();\n    }\n  }]);\n\n  return Food;\n}(_base2.default);\n\nexports.default = Food;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/food.js\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/lib/food.js?");

/***/ }
/******/ ]);